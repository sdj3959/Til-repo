# 📘 자바스크립트 학습 정리 (0529)

## ✅ switch 문

### 🧩 구조
```js
switch (표현식) {
  case 값1:
    // 실행 코드
    break;
  case 값2:
    // 실행 코드
    break;
  default:
    // 어떤 값과도 일치하지 않을 때 실행
}
```

- `case`의 값과 일치하면 해당 코드 실행
- `break`가 없으면 다음 case까지 연달아 실행됨 (fall-through)
- `default`는 선택사항이지만 없을 경우 아무 것도 실행되지 않을 수 있음

### 💡 예제
```js
let day = "수요일";

switch (day) {
  case "월요일":
    console.log("새로운 한 주가 시작되었습니다!");
    break;
  case "수요일":
    console.log("벌써 주중이네요!");
    break;
  case "금요일":
    console.log("주말이 다가오고 있어요!");
    break;
  default:
    console.log("즐거운 하루 보내세요!");
}
```

> 🧾 **요약**: switch는 값이 명확할 때 if보다 간결하게 조건 분기를 표현할 수 있음

---

## ✅ 반복문

## 🔁 for 문

### 📌 기본 구조
```js
for (초기화; 조건; 증감) {
  // 반복 코드
}
```

### 💡 예제
```js
for (let i = 0; i < 5; i++) {
  console.log("반복 횟수:", i);
}
```

### 🔁 중첩 for 문
```js
for (let i = 0; i < 3; i++) {
  for (let j = 0; j < 2; j++) {
    console.log(`i: ${i}, j: ${j}`);
  }
}
```

> 🧾 **요약**: 반복 횟수가 명확할 때 적합, 중첩 for문은 2차원 배열 등에 유용

---

## 🔁 while 문

### 📌 기본 구조
```js
while (조건) {
  // 조건이 true인 동안 반복
}
```

### 💡 예제
```js
let count = 0;

while (count < 5) {
  console.log("반복 횟수:", count);
  count++;
}
```

### 🔁 무한 루프 방지 예제
```js
let i = 0;

while (true) {
  console.log(i);
  if (i >= 3) break;
  i++;
}
```

> 🧾 **요약**: 반복 조건이 명확하지 않거나 동적으로 변할 때 사용, break와 조건 변경 필수

---

✅ **총정리**
- `switch` 문은 값 기준의 조건문을 간결하게 표현 가능
- `for` 문은 반복 횟수가 정해진 경우, `while` 문은 조건 기반 반복에 적합
- 반복문 사용 시 무한 루프 방지를 위해 조건을 반드시 제어할 것